{"username":"jakub_k_tomasze1","email":"jakub.k.tomaszewski@gmail.com","country":"Poland","name":"Jakub Tomaszewski","city":"Warsaw","website":"","job_title":"","github_url":"https://github.com/JakubTomaszewski","gh_uid":"57564656","personal_first_name":"Jakub","personal_last_name":"Tomaszewski","timezone":"Europe/Warsaw","hackos":578,"favorite_challenges":[],"challenges_created":[],"other_emails":[],"all_schools":[],"snippets":[],"submissions":[{"contest":"Master","challenge":"Day 0: Hello, World.","code":"# Read a full line of input from stdin and save it to our dynamically typed variable, input_string.\ninput_string = input()\n\n# Print a string literal saying \"Hello, World.\" to stdout.\nprint('Hello, World.')\n\n# TODO: Write a line of code here that prints the contents of input_string to stdout.\nprint(input_string)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Python If-Else","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    n = int(input().strip())\nif n % 2 == 1:\n    print('Weird')\nelif n % 2 == 0 and (n\u003e=2 or n\u003c=5):\n    print('Not Weird')\nelif n\u003c=20:\n    print('Weird')\nelse:\n    print('Weird')\n","score":0.666666666667,"language":"python3"},{"contest":"Master","challenge":"Python If-Else","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    n = int(input().strip())\nif n % 2 == 1:\n    print('Weird')\nelif n % 2 == 0 and (n\u003e=2 or n\u003c=5):\n    print('Not Weird')\nelif n\u003c=20:\n    print('Weird')\nelse:\n    print('Not Weird')\n","score":0.666666666667,"language":"python3"},{"contest":"Master","challenge":"Python If-Else","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    n = int(input().strip())\nif n % 2 == 1:\n    print('Weird')\nelif n % 2 == 0 and n\u003e=2 or n\u003c=5:\n    print('Not Weird')\nelif n\u003c=20:\n    print('Weird')\nelse:\n    print('Not Weird')\n","score":0.666666666667,"language":"python3"},{"contest":"Master","challenge":"Python If-Else","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    n = int(input().strip())\nif n % 2 == 1:\n    print('Weird')\nelif n % 2 == 0 and (n\u003e=2 or n\u003c=5):\n    print('Not Weird')\nelif n\u003c=20:\n    print('Weird')\nelse:\n    print('Not Weird')\n","score":0.666666666667,"language":"python3"},{"contest":"Master","challenge":"Python If-Else","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    n = int(input().strip())\nif n % 2 == 1:\n    print('Weird')\nelif n\u003e=2 or n\u003c=5:\n    print('Not Weird')\nelif n\u003c=20:\n    print('Weird')\nelse:\n    print('Not Weird')\n","score":0.666666666667,"language":"python3"},{"contest":"Master","challenge":"Python If-Else","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    n = int(input().strip())\nif n % 2 == 1:\n    print('Weird')\nelif n\u003e=2 or n\u003c=5:\n    print('Not Weird')\nelif n\u003c=20:\n    print('Weird')\nelse:\n    print('Not Weird')\n","score":0.666666666667,"language":"python3"},{"contest":"Master","challenge":"Python: Division","code":"if __name__ == '__main__':\n    a = int(input())\n    b = int(input())\nprint(a//b)\nprint(a/b)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Arithmetic Operators","code":"if __name__ == '__main__':\n    a = int(raw_input())\n    b = int(raw_input())\n\nprint(a+b)\nprint(a-b)\nprint(a*b)\n","score":1.0,"language":"python"},{"contest":"Master","challenge":"Arithmetic Operators","code":"if __name__ == '__main__':\n    a = int(raw_input())\n    b = int(raw_input())\n\nprint(a+b)\nprint(a-b)\nprint(a*b)\n","score":1.0,"language":"python"},{"contest":"Master","challenge":"Loops","code":"if __name__ == '__main__':\n    n = int(input())\nfor i in range(n):\n    print(i**2)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Print Function","code":"if __name__ == '__main__':\n    n = int(input())\nx=''\nfor i in range(n):\n    x+=str(i+1)\nprint(x)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Day 7: Arrays","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\nx = ''\nif __name__ == '__main__':\n    n = int(input())\n\n    arr = list(map(int, input().rstrip().split()))\n    for i in range(n):\n        x += str(arr[-(i+1)])+' '\nprint(x)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Capitalize!","code":"\n\n# Complete the solve function below.\ndef solve(s):\n    s= s.capitalize()\n    for i in range(len(s)):\n        if s[i] == ' ':\n            s = s.replace(s[i+1], s[i+1].upper())\n            break\n    return s\n\n","score":0.2,"language":"python3"},{"contest":"Master","challenge":"Capitalize!","code":"\n\n# Complete the solve function below.\ndef solve(s):\n    s= s.capitalize()\n    for i in range(len(s)):\n        if s[i] == ' ':\n            s = s.replace(s[i+1], s[i+1].upper())\n    return s\n\n","score":0.8,"language":"python3"},{"contest":"Master","challenge":"Capitalize!","code":"\n\n# Complete the solve function below.\ndef solve(s):\n    return ' '.join(word.capitalize() for word in s.split())\n\n","score":0.2,"language":"python3"},{"contest":"Master","challenge":"Capitalize!","code":"\n\n# Complete the solve function below.\ndef solve(s):\n    return ' '.join(word.capitalize() for word in s.split(' '))\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Text Wrap","code":"\n\ndef wrap(string, max_width):\n    word = ''\n    i = 1\n    for letter in string:\n        if i%max_width == 0:\n            word += str(letter)+'\\n'\n        else:\n            word += str(letter)\n        i+=1\n    return word\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Write a function","code":"def is_leap(year):\n    leap = False\n    if year % 4 == 0:\n        if year % 100 == 0:\n            if year % 400 == 0: leap = True\n            else: leap = False\n        else: leap = True\n    # Write your logic here\n    \n    return leap\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Write a function","code":"def is_leap(year):\n    leap = False\n    return year % 4 == 0 and (year % 100 != 0 or year % 400 == 0)\n    # Write your logic here\n    \n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Say \"Hello, World!\" With Python","code":"print(\"Hello, World!\")\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Python If-Else","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\n\nif __name__ == '__main__':\n    n = int(input().strip())\n\nif n % 2 != 0 or (n % 2 == 0 and (n\u003e=6 and n\u003c=20)): print('Weird')\nelse: print('Not Weird')\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find the Runner-Up Score!  ","code":"if __name__ == '__main__':\n    n = int(input())\n    arr = map(int, input().split())\n\ndef return_max(array):\n    array = list(array)\n    st = max(array)\n    while True:\n        if max(array) == st:\n            array.remove(max(array))\n        else:\n            break\n    return max(array)\n            \n\nprint(return_max(arr))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find the Runner-Up Score!  ","code":"if __name__ == '__main__':\n    n = int(input())\n    arr = map(int, input().split())\n\ndef return_max(array):\n    array = list(array)\n    maximum = max(array)\n    while max(array) == maximum:\n        array.remove(max(array))\n    return max(array) \n            \n\nprint(return_max(arr))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Finding the percentage","code":"if __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n\ndef get_avr(name):\n    return '{:0.2f}'.format(sum(student_marks[name])/3)\n\nprint(get_avr(query_name))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"String Split and Join","code":"def split_and_join(line):\n    # write your code here\n    return '-'.join(line.split())\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"What's Your Name?","code":"def print_full_name(a, b):\n    print(\"Hello {} {}! You just delved into python.\".format(a,b))\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Mutations","code":"def mutate_string(string, position, character):\n    l = list(string)\n    l[position] = character\n    return ''.join(l)\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Mutations","code":"def mutate_string(string, position, character):\n    str = ''\n    for i in range(len(string)):\n        if i==position:\n            str += character\n        else:\n            str += string[i]\n    return str\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find a string","code":"def count_substring(string, sub_string):\n    occ = 0\n    for i in range(len(string)):\n        if string[i:(i+len(sub_string))] == sub_string:\n            occ+=1\n    return occ\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"String Formatting","code":"def print_formatted(number):\n    for i in range(1, number+1):\n        print(str(i).rjust(number), str('%o' % i).rjust(number), str(format(i, 'X')).rjust(number), str(f'{i:b}').rjust(number))\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"String Formatting","code":"def print_formatted(number):\n    for i in range(1, (number+1)):\n        print(str(i).rjust(number), str('%o' % i).rjust(number), str(format(i, 'X')).rjust(number), str(f'{i:b}').rjust(number))\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"Tuples ","code":"if __name__ == '__main__':\n    n = int(input())\n    integer_list = map(int, input().split())\n\nprint(hash(tuple(integer_list)))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Lists","code":"if __name__ == '__main__':\n    N = int(input())\n    l=[]\nfor line in range(N):\n    x = input()\n    if x.split()[0] == 'insert':\n        l.insert(int(x.split()[1]), int(x.split()[2]))\n    elif x.split()[0] == 'remove':\n        l.remove(int(x.split()[1]))\n    elif x.split()[0] == 'append':\n        l.append(int(x.split()[1]))\n    elif x.split()[0] == 'sort':\n        l.sort()\n    elif x.split()[0] == 'reverse':\n        l.reverse()\n    elif x.split()[0] == 'pop':\n        l.pop()\n    else:\n        print(l)\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Nested Lists","code":"if __name__ == '__main__':\n    names = []\n    scores = []\n    for _ in range(int(input())):\n        name = input()\n        score = float(input())\n        names.append(name)\n        scores.append(score)\n\nminimum = min(scores)\nwhile min(scores) == minimum:\n    names.pop(scores.index(min(scores)))\n    scores.pop(scores.index(min(scores)))\n\nmin_names = []\nfor i in range(len(scores)):\n    if scores[i] == min(scores):\n        min_names.append(names[i])\nfor i in range(len(min_names)):\n    print(min(min_names))\n    min_names.remove(min(min_names))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"sWAP cASE","code":"def swap_case(s):\n    word = ''\n    for letter in s:\n        if letter.islower():\n            word+=letter.upper()\n        else:\n            word+=letter.lower()\n    return word\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"sWAP cASE","code":"def swap_case(s):\n    return ''.join(l.upper() if l.islower() else l.lower() for l in s)\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find Angle MBC","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nimport math\nab = int(input())\nbc = int(input())\n\n\nprint(str(round(math.degrees(math.asin((((ab**2 + bc**2)**(0.5))/2)/bc))))+'°')\n","score":0.071428571429,"language":"python3"},{"contest":"Master","challenge":"Exceptions","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nT = int(input())\nfor i in range(T):\n    chars = input().split()\n    try:\n        print(int(chars[0])//int(chars[1]))\n    except ZeroDivisionError as z:\n        print('Error Code:', z)\n    except ValueError as v:\n        print('Error Code:', v)\n        \n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find Angle MBC","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nimport math\nab = int(input())\nbc = int(input())\n\nif ab == bc:\n    print(str(round(math.degrees(math.asin((((ab**2 + bc**2)**(0.5))/2)/bc))))+'°')\nelse:\n    res = (ab**2)/(bc*((ab**2 + bc**2)**(0.5)))\n    deg = math.degrees(math.asin(res))\n    print(str(round(res))+'°')\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"The Minion Game","code":"def minion_game(string):\n    # your code goes here\n    pts_kevin = 0\n    pts_stuart = 0\n    for i in range(len(string)):\n        if string[i] in 'AEIOU':\n            for i in range(len(s[i:])):\n                pts_kevin += 1\n        else:\n            for i in range(len(s[i:])):\n                pts_stuart += 1\n    if max(pts_kevin, pts_stuart) == pts_stuart:\n        print('Stuart', pts_stuart)\n    else:\n        print('Kevin', pts_kevin)\n    '''\n    gets a string\n    iters through for i in range len(string)\n    if letter is vowel is starts getting all substrings\n    new_sub_pts = len(string[letter_index:]) \n    '''\n","score":0.125144843569,"language":"python3"},{"contest":"Master","challenge":"The Minion Game","code":"def minion_game(string):\n    # your code goes here\n    pts_kevin = 0\n    pts_stuart = 0\n    for i in range(len(string)):\n        if string[i] in 'AEIOU':\n            for i in range(len(s[i:])):\n                pts_kevin += 1\n        else:\n            for i in range(len(s[i:])):\n                pts_stuart += 1\n    if pts_kevin == pts_stuart:\n        print('Draw')\n    elif max(pts_kevin, pts_stuart) == pts_stuart:\n        print('Stuart', pts_stuart)\n    else:\n        print('Kevin', pts_kevin)\n    '''\n    gets a string\n    iters through for i in range len(string)\n    if letter is vowel is starts getting all substrings\n    new_sub_pts = len(string[letter_index:]) \n    '''\n","score":0.130938586327,"language":"python3"},{"contest":"Master","challenge":"collections.Counter()","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nshoes = int(input())\nsizes = input().split()\ncustomers = int(input())\nearnings = 0\n\nfor i in range(customers):\n    offer = input().split()\n    if offer[0] in sizes:\n        earnings += int(offer[1])\n        sizes.remove(offer[0])\n    \nprint(earnings)\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"The Minion Game","code":"def minion_game(string):\n    # your code goes here\n    pts_Kevin = 0\n    pts_Stuart = 0\n    for i in range(len(string)):\n        if string[i] in 'AEIOU':\n            pts_Kevin += (len(string)-i)\n        else:\n            pts_Stuart += (len(string)-i)\n    if pts_Kevin \u003e pts_Stuart:\n        print('Kevin', pts_Kevin)\n    elif pts_Stuart \u003e pts_Kevin:\n        print('Stuart', pts_Stuart)\n    else:\n        print('Draw')\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Polar Coordinates","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nimport cmath\nnumber = complex(input())\n\nprint(abs(number))\nprint(cmath.phase(number))\n","score":1.0,"language":"python"},{"contest":"Master","challenge":"itertools.product()","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nfrom itertools import product\n\nA = input().split()\nB = input().split()\nA = list(map(int, A))\nB = list(map(int, B))\n\nAxB = product(A, B)\nfor element in AxB:\n    print(element, end=' ')\n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"itertools.product()","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nfrom itertools import product\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nprint(*product(A, B))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nhow_many_nm = list(map(int, input().split()))\n\nn = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nhappiness = 0\nfor i in range(how_many_nm[1]):\n    if A[i] in n:\n        happiness += 1\n    if B[i] in n:\n        happiness -= 1\nprint(happiness)\n","score":0.285714285714,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nhow_many_nm = list(map(int, input().split()))\n\nn = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nhappiness = 0\nfor i in range(how_many_nm[1]):\n    if A[i] in n:\n        happiness += 1\n    if B[i] in n:\n        happiness -= 1\nprint(happiness)\n","score":0.285714285714,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nhow_many_nm = list(map(int, input().split()))\n\nn = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nhappiness = 0\nfor i in range(how_many_nm[1]):\n    if A[i] in n:\n        happiness += 1\n    else:\n        continue\n    if B[i] in n:\n        happiness -= 1\n    else:\n        continue\nprint(happiness)\n","score":0.142857142857,"language":"python3"},{"contest":"Master","challenge":"Shape and Reshape","code":"import numpy as np\n\narray = np.array(list(map(int, input().split())))\nprint(np.reshape(array, (3,3)))\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nhow_many_nm = list(map(int, input().split()))\n\nn = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nhappiness = 0\nfor i in range(how_many_nm[1]):\n    if A[i] in n:\n        happiness += 1\n    if B[i] in n:\n        happiness -= 1\nprint(happiness)\n","score":0.285714285714,"language":"python3"},{"contest":"Master","challenge":"Concatenate","code":"import numpy as np\n\ndata = list(map(int,input().split()))\n\nar1 = np.array([list(map(int,input().split())) for i in range(data[0])])\nar2 = np.array([list(map(int,input().split())) for i in range(data[1])])\n\nprint(np.concatenate((ar1, ar2)))\n\n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Zeros and Ones","code":"import numpy as np\n\nsize = tuple(map(int, input().split()))\n\nprint(np.zeros((size), dtype=np.int))\nprint(np.ones((size), dtype=np.int))\n\n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Introduction to Sets","code":"def average(array):\n    return sum(set(array))/len(set(array))\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Triangle Quest","code":"for i in range(1,int(input())): #More than 2 lines will result in 0 score. Do not leave a blank line also\n    print((10**i//9)*i)\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Set .add() ","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nn = int(input())\ns = set('')\nfor i in range(n):\n    s.add(input())\n\nprint(len(s))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find Angle MBC","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nimport math\nab = float(input())\nbc = float(input())\n\n\nprint(str(round(math.degrees(math.asin((((ab**2 + bc**2)**(0.5))/2)/bc))))+'°')\n","score":0.071428571429,"language":"python3"},{"contest":"Master","challenge":"Find Angle MBC","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nimport math \n\nab = int(input()) \nbc = int(input()) \nprint(str(int(round(math.degrees(math.atan2(ab,bc)))))+'°')\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Find Angle MBC","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nimport math \n\nab = int(input()) \nbc = int(input()) \nprint(str(int(round(math.degrees(math.atan2(ab,bc)))))+'°')\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Calendar Module","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nimport calendar\ndate = input().split()\n\nprint(calendar.weekday(date[2],date[0], date[1]))\n","score":0.0,"language":"python"},{"contest":"Master","challenge":"Calendar Module","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nimport calendar\ndate = list(map(int,raw_input().split()))\ndays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\nprint(days[calendar.weekday(date[2],date[0], date[1])].upper())\n","score":1.0,"language":"python"},{"contest":"Master","challenge":"Calendar Module","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nimport calendar\ndate = list(map(int,raw_input().split()))\nprint(list(calendar.day_name)[calendar.weekday(date[2],date[0], date[1])].upper())\n","score":1.0,"language":"python"},{"contest":"Master","challenge":"List Comprehensions","code":"if __name__ == '__main__':\n    x = int(input())\n    y = int(input())\n    z = int(input())\n    n = int(input())\n\nprint([[i,j,k] for i in range(x+1) for j in range(y+1) for k in range(z+1) if (i+j+k != n)]\n)\n\n\n\n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"itertools.permutations()","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nfrom itertools import permutations\nn = input().split()\nperms = sorted(permutations(n[0], int(n[1])))\nfor per in perms:\n    print(''.join(p for p in per))\n    \n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nhow_many_nm = list(map(int, input().split()))\n\nn = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nhappiness = 0\nfor element in n:\n    if element in A:\n        happiness += 1\n    if element in B:\n        happiness -= 1\nprint(happiness)\n","score":0.428571428571,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nhow_many_nm = list(map(int, input().split()))\n\nn = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nhappiness = 0\nfor element in n:\n    if element in A and not(element in B):\n        happiness += 1\n    elif element in B:\n        happiness -= 1\nprint(happiness)\n","score":0.428571428571,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nhow_many_nm = list(map(int, input().split()))\n\nn = iter(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nhappiness = 0\nfor element in n:\n    if element in A and not(element in B):\n        happiness += 1\n    elif element in B:\n        happiness -= 1\nprint(happiness)\n","score":0.428571428571,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nhow_many = list(map(int, input().split()))\n\nn = input().split()\nA = input().split()\nB = input().split()\n\n\nhappiness = sum([((n[i] in A) - (n[i] in B)) for i in range(how_many[0])])\nprint(happiness)\n","score":0.428571428571,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nhow_many = list(map(int, input().split()))\n\nn = input().split()\nA = input().split()\nB = input().split()\n\n\nhappiness = sum( ((n[i] in A) - (n[i] in B)) for i in range(how_many[0]) )\nprint(happiness)\n","score":0.428571428571,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\n\n\nfrom collections import Counter\n\nn_and_m = input() # i don't use n or m\n\nnums = Counter(input().split(' '))\n\nget_nums = lambda inp: [n for n in inp.split(' ')]\npos = get_nums(input())\nneg = get_nums(input())\n\nhappiness = sum(\n    [nums.get(num, 0) for num in pos]\n    + [-nums.get(num, 0) for num in neg]\n    )\n\nprint(happiness)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"No Idea!","code":"\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\n\n\nfrom collections import Counter\n\nn_and_m = input()\n\nnums = Counter(input().split(' '))\n\nget_nums = lambda inp: [n for n in inp.split(' ')]\npos = get_nums(input())\nneg = get_nums(input())\n\nhappiness = sum(\n    [nums.get(num, 0) for num in pos]\n    + [-nums.get(num, 0) for num in neg]\n    )\n\nprint(happiness)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Text Alignment","code":" #Replace all ______ with rjust, ljust or center. \n\nthickness = int(input()) #This must be an odd number\nc = 'H'\n\n#Top Cone\nfor i in range(thickness):\n    print((c*i).rjust(thickness-1)+c+(c*i).ljust(thickness-1))\n\n#Top Pillars\nfor i in range(thickness+1):\n    print((c*thickness).center(thickness*2)+(c*thickness).center(thickness*6))\n\n#Middle Belt\nfor i in range((thickness+1)//2):\n    print((c*thickness*5).center(thickness*6))    \n\n#Bottom Pillars\nfor i in range(thickness+1):\n    print((c*thickness).center(thickness*2)+(c*thickness).center(thickness*6))    \n\n#Bottom Cone\nfor i in range(thickness):\n    print(((c*(thickness-i-1)).rjust(thickness)+c+(c*(thickness-i-1)).ljust(thickness)).rjust(thickness*6))\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"String Validators","code":"if __name__ == '__main__':\n    s = input()\n    is_it = {i: False for i in range(5)}\nfor i in range(len(s)):\n    if s[i].isalnum():\n        is_it[0] = True\n    if s[i].isalpha():\n        is_it[1] = True\n    if s[i].isdigit():\n        is_it[2] = True\n    if s[i].islower():\n        is_it[3] = True\n    if s[i].isupper():\n        is_it[4] = True\n        \nfor value in is_it.values():\n    print(value)\n    \n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"String Formatting","code":"def print_formatted(number):\n    # your code goes here\n    for i in range(1,n+1):\n        print(str(i).rjust(n),str(oct(i))[2:].rjust(n),str(hex(i))[2:].rjust(n),str(bin(i))[2:].rjust(n))\n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"String Formatting","code":"def print_formatted(number):\n    # your code goes here\n    for i in range(1,n+1):\n        print(str(i).rjust(n),str(oct(i))[2:].rjust(n),str(hex(i))[2:].rjust(n),str(bin(i))[2:].rjust(n),sep=' ')\n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"String Formatting","code":"def print_formatted(number):\n    # your code goes here\n    for i in range(1,n+1):\n        print(str(i).rjust(n,' '),str(oct(i)[2:]).rjust(n,' '),str(hex(i)[2:].upper()).rjust(n,' '),str(bin(i)[2:]).rjust(n,' '),sep=' ')\n        #print(str(i).rjust(n),str(oct(i))[2:].rjust(n),str(hex(i))[2:].rjust(n),str(bin(i))[2:].rjust(n),sep=' ')\n\n\n\n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"String Formatting","code":"def print_formatted(number):\n    # your code goes here\n    for i in range(1,number+1):\n        print(str(i).rjust(number),str(oct(i))[2:].rjust(number),str(hex(i))[2:].rjust(number),str(bin(i))[2:].rjust(number),sep=' ')\n\n\n\n \n\n","score":0.0,"language":"python3"},{"contest":"Master","challenge":"String Formatting","code":"def print_formatted(number):\n    # your code goes here\n    #for i in range(1,number+1):\n        #print(str(i).rjust(number),str(oct(i))[2:].rjust(number),str(hex(i))[2:].rjust(number),str(bin(i))[2:].rjust(number),sep=' ')   n = int(raw_input())\n    \n    width = len(\"{0:b}\".format(n))\n    for i in range(1,n+1):\n        print(\"{0:{width}d} {0:{width}o} {0:{width}X} {0:{width}b}\".format(i, width=width))\n\n\n\n\n \n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Simple Array Sum","code":"#!/bin/python3\n\nimport os\nimport sys\n\n#\n# Complete the simpleArraySum function below.\n#\ndef simpleArraySum(ar):\n    return(sum(ar))\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    ar_count = int(input())\n\n    ar = list(map(int, input().rstrip().split()))\n\n    result = simpleArraySum(ar)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Simple Array Sum","code":"#!/bin/python3\n\nimport os\nimport sys\n\n#\n# Complete the simpleArraySum function below.\n#\ndef simpleArraySum(ar):\n    return sum(ar)\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    ar_count = int(input())\n\n    ar = list(map(int, input().rstrip().split()))\n\n    result = simpleArraySum(ar)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Simple Array Sum","code":"#!/bin/python3\n\nimport os\nimport sys\n\n#\n# Complete the simpleArraySum function below.\n#\ndef simpleArraySum(ar):\n    suma = 0\n    for e in ar:\n        suma+=e        \n    return suma\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    ar_count = int(input())\n\n    ar = list(map(int, input().rstrip().split()))\n\n    result = simpleArraySum(ar)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Word Order","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nn = int(input())\nwords = {}\n\nfor i in range(n):\n    inp = input()\n    if inp in words.keys():\n        words[inp] += 1\n    else:\n        words[inp] = 1\n\nprint(len(words))\n[print(value, end=' ') for value in words.values()]\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Set .discard(), .remove() \u0026 .pop()","code":"n = int(input())\ns = set(map(int, input().split()))\nN = int(input())\n\nfor i in range(N):\n    cmd = input().split()\n    if cmd[0] == 'pop':\n        s.pop()\n    else:\n        eval('s.'+cmd[0]+'('+str(cmd[1])+')')\nprint(sum(s))\n\n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Set .discard(), .remove() \u0026 .pop()","code":"n = int(input())\ns = set(map(int, input().split()))\nN = int(input())\n\nfor i in range(N):\n    cmd = input().split()\n    if cmd[0] != 'pop':\n        eval('s.{}({})'.format(cmd[0], cmd[1]))\n    else: s.pop()\nprint(sum(s))\n\n\n\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Merge the Tools!","code":"def merge_the_tools(s, k):\n    p = len(s)/k\n    idx = 0\n    subs = []\n    for i in range(1, len(s)+1):\n        if (i % p) == 0:\n            subs.append(s[idx:i])\n            idx = i\n\n    from collections import OrderedDict\n    [print(\"\".join(OrderedDict.fromkeys(sub))) for sub in subs]\n\n","score":0.0625,"language":"python3"},{"contest":"Master","challenge":"Set .union() Operation","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nen_n = int(input())\nen = set(input().split())\n\nfr_n = int(input())\nfr = set(input().split())\n\nprint(len(en.union(fr)))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Set .union() Operation","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nen_n = int(input())\nen = set(input().split())\n\nfr_n = int(input())\nfr = set(input().split())\n\nprint(len(en)+len(fr)-len(en.intersection(fr)))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Set .intersection() Operation","code":" # Enter your code here. Read input from STDIN. Print output to STDOUT\n\nen_n = int(input())\nen = set(input().split())\n\nfr_n = int(input())\nfr = input().split()\n\nprint(len(en.intersection(fr)))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Set .intersection() Operation","code":" # Enter your code here. Read input from STDIN. Print output to STDOUT\n\nen_n = int(input())\nen = set(input().split())\n\nfr_n = int(input())\n\nprint(len(en.intersection(input().split())))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Set .intersection() Operation","code":" # Enter your code here. Read input from STDIN. Print output to STDOUT\n\nen_n = int(input())\nen = set(input().split())\n\nfr_n = int(input())\n\nprint(len(en.intersection(input().split())))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Set .difference() Operation","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nen_n = int(input())\nen = set(input().split())\n\nfr_n = int(input())\n\nprint(len(en.difference(input().split())))\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Solve Me First","code":"\n\ndef solveMeFirst(a,b):\n\treturn a+b\n\n\nnum1 = int(input())\nnum2 = int(input())\nres = solveMeFirst(num1,num2)\nprint(res)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Solve Me First","code":"\n\ndef solveMeFirst(a,b):\n\treturn a+b\n\n\nnum1 = int(input())\nnum2 = int(input())\nres = solveMeFirst(num1,num2)\nprint(res)\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Compare the Triplets","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the compareTriplets function below.\ndef compareTriplets(a, b):\n    scores = [0,0]\n    for i in range(len(a)):\n        if a[i] \u003e b[i]:\n            scores[0] += 1\n        elif a[i] \u003c b[i]:\n            scores[1] += 1\n    return scores\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    a = list(map(int, input().rstrip().split()))\n\n    b = list(map(int, input().rstrip().split()))\n\n    result = compareTriplets(a, b)\n\n    fptr.write(' '.join(map(str, result)))\n    fptr.write('\\n')\n\n    fptr.close()\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"A Very Big Sum","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the aVeryBigSum function below.\ndef aVeryBigSum(ar):\n    return sum(ar)\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    ar_count = int(input())\n\n    ar = list(map(int, input().rstrip().split()))\n\n    result = aVeryBigSum(ar)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"A Very Big Sum","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the aVeryBigSum function below.\ndef aVeryBigSum(ar):\n    suma = 0\n    for e in ar:\n        suma += e\n    return suma\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    ar_count = int(input())\n\n    ar = list(map(int, input().rstrip().split()))\n\n    result = aVeryBigSum(ar)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Diagonal Difference","code":"#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n#\n# Complete the 'diagonalDifference' function below.\n#\n# The function is expected to return an INTEGER.\n# The function accepts 2D_INTEGER_ARRAY arr as parameter.\n#\n\ndef diagonalDifference(arr):\n    d1 = 0\n    d2 = 0\n    for i in range(len(arr)):\n        d1 += arr[i][i]\n        d2 += arr[i][len(arr)-(i+1)]\n    return abs(d1-d2)\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    n = int(input().strip())\n\n    arr = []\n\n    for _ in range(n):\n        arr.append(list(map(int, input().rstrip().split())))\n\n    result = diagonalDifference(arr)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Merge the Tools!","code":"def merge_the_tools(s, k):\n    p = len(s)/k\n    idx = 0\n    subs = []\n    for i in range(1, len(s)+1):\n        if (i % p) == 0:\n            subs.append(s[idx:i])\n            idx = i\n\n    from collections import OrderedDict\n    [print(\"\".join(OrderedDict.fromkeys(sub))) for sub in subs]\n\n","score":0.0625,"language":"python3"},{"contest":"Master","challenge":"Compress the String! ","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nimport itertools\ns = input()\n\nprint(*((len(list(n)),int(c)) for c, n in itertools.groupby(s)))\n    \n","score":1.0,"language":"python3"},{"contest":"Master","challenge":"Iterables and Iterators","code":"# Enter your code here. Read input from STDIN. Print output to STDOUT\nfrom itertools import combinations\nn = int(input())\nletters = input().split()\nk = int(input())\n\nall_a = sum((1 for l in combinations(letters, k) if 'a' in l))\nprint(all_a/len(list(combinations(letters, k))))\n","score":1.0,"language":"python3"}],"teams":[],"contest_participations":[{"jobs_consent":null,"contest":"Master"}],"forum_comments":[],"all_ratings":[],"contest_medals":[],"survey_results":[],"messages_sent":[],"run_codes":[],"contests_created":[],"job_applications":[],"skills_test":[]}